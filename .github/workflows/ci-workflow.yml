name: .NET, React CI/CD workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest
    env:
      AZURE_WEBAPP_BACKEND_PACKAGE_PATH: "./publish"
      AZURE_WEBAPP_BACKEND_NAME: bookclub-backend
      DOTNET_VERSION: 7.0.x

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          SA_PASSWORD: $DB_SA_PASSWORD
          ACCEPT_EULA: Y
        ports:
          - 1433
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ./BookClubAPP.sln

      - name: List packages
        run: dotnet list package

      - name: Test Business
        run: dotnet test BookClubApp.Business/Tests/BookClubApp.Business.Tests/BookClubApp.Business.Tests.csproj --no-restore

      - name: Test Data Access
        run: dotnet test BookClubApp.DataAccess/Tests/BookClubApp.DataAccessLayer.Tests/BookClubApp.DataAccessLayer.Tests.csproj --no-restore

      - name: Clean
        run: dotnet clean ./BookClubAPP.sln --configuration Release

      - name: Build
        run: dotnet build ./BookClubAPP.sln --configuration Release --no-restore

      - name: Publish
        run: dotnet publish ./BookClubAPP.sln -c Release -o ${{ env.AZURE_WEBAPP_BACKEND_PACKAGE_PATH }} --no-build

      - name: Install EF Core Tools
        run: dotnet tool install --global dotnet-ef --version 7.0.14

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} 

      - name: Add Firewall Rule
        run: |
          # Get IP Adresse
          runner_ip=$(curl https://ipinfo.io/ip)
          echo "Runner IP: $runner_ip"

          # Add the IP to the SQL firewall (using Azure CLI)
          az sql server firewall-rule create --resource-group BookClub-Bachelor-2023 --server bookclub-sql-server --name "MigrationIP" --start-ip-address $runner_ip --end-ip-address $runner_ip

      - name: Build Migration
        run: dotnet build ./BookClubApp.DataAccess/BookClubApp.DataAccess.csproj --configuration Release

      - name: Run migrations
        run: dotnet ef database update --project BookClubApp.DataAccess/BookClubApp.DataAccess.csproj --connection "${{ secrets.AZURE_SQL_CONNECTION_STRING }}"

      - name: Remove Firewall Rule
        if: always()
        run: |
          az sql server firewall-rule delete --resource-group BookClub-Bachelor-2023 --server bookclub-sql-server --name "MigrationIP"

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_BACKEND_NAME }}
          publish-profile: ${{ secrets.AZURE_BACKEND_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_BACKEND_PACKAGE_PATH }}
          
  build-and-test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
          REACT_APP_AUTH0_DOMAIN: ${{ secrets.REACT_APP_AUTH0_DOMAIN }}
          REACT_APP_AUTH0_CLIENT_ID: ${{ secrets.REACT_APP_AUTH0_CLIENT_ID }}
          REACT_APP_AUTH0_AUDIENCE_IDENTIFIER: ${{ secrets.REACT_APP_AUTH0_AUDIENCE_IDENTIFIER }}
          REACT_APP_AUTH_TOKEN: ${{ secrets.REACT_APP_AUTH_TOKEN }}
        working-directory: ./BookClubApp.Presentation

      - name: Copy files to build
        run: |
          cp ./BookClubApp.Presentation/package.json ./BookClubApp.Presentation/build/
          cp ./BookClubApp.Presentation/package-lock.json ./BookClubApp.Presentation/build/
      
      - name: Create a ZIP file and exclude directories
        run: |
          cd ./BookClubApp.Presentation
          zip -r ../release.zip build package.json package-lock.json

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v2
        with:
          name: node-app
          path: release.zip

      - name: Download artifact
        uses: actions/download-artifact@v2
        with: 
          name: node-app

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: mybookclub
          publish-profile: ${{ secrets.AZURE_FRONTED_PUBLISH_PROFILE }}
          package: release.zip