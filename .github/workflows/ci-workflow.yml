name: .NET, React CI/CD workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest
    env:
      AZURE_WEBAPP_BACKEND_PACKAGE_PATH: "./publish"
      AZURE_WEBAPP_BACKEND_NAME: bookclub-backend

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          SA_PASSWORD: $DB_SA_PASSWORD
          ACCEPT_EULA: Y
        ports:
          - 1433
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Restore dependencies
        run: dotnet restore ./BookClubAPP.sln

      - name: List packages
        run: dotnet list package

      - name: Build
        run: dotnet build ./BookClubAPP.sln --configuration Release --no-restore

      - name: Publish
        run: dotnet publish ./BookClubAPP.sln -c Release -o ${{ env.AZURE_WEBAPP_BACKEND_PACKAGE_PATH }} --no-build

      - name: Install EF Core Tools
        run: dotnet tool install --global dotnet-ef --version 7.0.14

      - name: Add Firewall Rule
        run: |
          # Get IP Adresse
          runner_ip=$(curl https://ipinfo.io/ip)
          echo "Runner IP: $runner_ip"

          # Add the IP to the SQL firewall (using Azure CLI)
          az sql server firewall-rule create --resource-group BookClub-Bachelor-2023 --server bookclub-sql-server --name "MigrationIP" --start-ip-address $runner_ip --end-ip-address $runner_ip

      - name: Run migrations
        run: dotnet ef database update --project BookClubApp.DataAccess/BookClubApp.DataAccess.csproj --connection "${{ secrets.AZURE_SQL_CONNECTION_STRING }}"

      - name: Remove Firewall Rule
        if: always()
        run: |
          az sql server firewall-rule delete --resource-group BookClub-Bachelor-2023 --server bookclub-sql-server --name "MigrationIP"

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_BACKEND_NAME }}
          publish-profile: ${{ secrets.AZURE_BACKEND_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_BACKEND_PACKAGE_PATH }}
          
  build-and-test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - name: Install dependencies (Presentation)
        run: npm ci --legacy-peer-deps
        working-directory: BookClubApp.Presentation

      - name: Run Tests
        run: npm test
        working-directory: BookClubApp.Presentation

      - name: Build
        run: npm run build
        working-directory: BookClubApp.Presentation
        
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: mybookclub
          publish-profile: ${{ secrets.AZURE_FRONTED_PUBLISH_PROFILE }}
          package: ./BookClubApp.Presentation/build